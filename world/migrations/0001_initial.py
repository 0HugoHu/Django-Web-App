# Generated by Django 4.1.5 on 2023-02-15 16:54

from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('begin', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('passenger', models.CharField(max_length=100)),
                ('request_time', models.DateTimeField(auto_now=True)),
                ('vehicle_type', models.CharField(choices=[('Economy', '0'), ('Comfort', '1'), ('Large', '2'), ('Pet', '3'), ('Green', '4'), ('Special', '5')], default='Economy', max_length=20)),
                ('estimate_pickup_time', models.DateTimeField()),
                ('estimate_fee', models.CharField(max_length=100)),
                ('driver', models.CharField(blank=True, max_length=100, null=True)),
                ('order_taking_time', models.DateTimeField(blank=True, null=True)),
                ('pickup_time', models.DateTimeField(blank=True, null=True)),
                ('arrive_time', models.DateTimeField(blank=True, null=True)),
                ('actual_fee', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('Request', 'REQUEST'), ('Cancelled', 'CANCELLED'), ('Order Taking', 'TAKING'), ('In Progress', 'PROGRESS'), ('Completed', 'COMPLETED')], default='Request', max_length=20)),
                ('peer', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('plate_number', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('vehicle_type', models.CharField(choices=[('Economy', '0'), ('Comfort', '1'), ('Large', '2'), ('Pet', '3'), ('Green', '4'), ('Special', '5')], default='Economy', max_length=20)),
                ('capacity', models.IntegerField(blank=True, default=3, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(default='Null', max_length=64)),
                ('last_name', models.CharField(default='Null', max_length=64)),
                ('username', models.CharField(default='Null', max_length=64)),
                ('password', models.CharField(default='Null', max_length=64)),
                ('gender', models.CharField(choices=[('Female', 'FEMALE'), ('Male', 'MALE'), ('Others', 'OTHERS'), ('Hope not to say', 'UNKNOWN')], default='Female', max_length=20)),
                ('email', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(default='+19001234567', max_length=128, region=None)),
                ('user_group', models.CharField(choices=[('Passenger', 'PASSENGER'), ('Driver', 'DRIVER'), ('Manager', 'MANAGER')], default='Passenger', max_length=20)),
                ('driver_license', models.IntegerField(default=0)),
                ('plate_number', models.CharField(default='0', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
